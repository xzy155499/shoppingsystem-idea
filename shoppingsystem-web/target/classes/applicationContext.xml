<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

        <!-- spring  配置文件  -->
     
        <context:component-scan base-package="com.guigu">
                <!-- 大容器  扫描时  排出 Controller注解 -->
                <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        </context:component-scan>


        <!-- 初始化数据源对象；DruidDataSource -->
        <bean id="druiddataSource" class="com.alibaba.druid.pool.DruidDataSource">
                <!-- 与数据库建立连接的基本信息 -->
                <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
                <property name="url"
                          value="jdbc:mysql://localhost:3306/shoppingdb"></property>
                <property name="username" value="root"></property>
                <property name="password" value="14589"></property>
                <!-- 关于数据库连接池的基本信息 -->
                <property name="maxActive" value="50"></property>
                <property name="initialSize" value="5"></property>
                <property name="minIdle" value="1"></property>
                <property name="maxWait" value="60000"></property>
        </bean>

        <!--配置SqlSessionFactory的bean    -->
        <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
                <property name="dataSource" ref="druiddataSource"></property>
                <property name="configLocation" value="classpath:mybatis-config.xml"></property>
         </bean>

        <!--  配置mybatis接口的代理对象bean
        根据指定的包 把mapper找出来，创建对象
        -->
        <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
                <property name="basePackage" value="com.guigu.dao"></property>
        </bean>

        <!-- shiro 整合spring 配置 -->

        <!-- 自定义Realm或者 JDBCRealm对象 -->
        <bean id="myRealm" class="com.guigu.realm.MyRealm">
               <property name="credentialsMatcher" ref="credentialsMatcher"></property>
        </bean>

        <!-- 安全管理器对象 -->
        <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
                <property name="realm" ref="myRealm"></property>
        </bean>

        <!-- ShiroFilterFactoryBean -->
        <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
                <property name="securityManager" ref="securityManager"></property>
                <property name="loginUrl" value="/login.jsp"></property>
                <property name="unauthorizedUrl" value="/unauthorized.jsp"></property>
                <!-- md5配置生效-->
                <property name="filterChainDefinitions">
                        <value>
                                /login*=anon
                                /jsp/**=authc
                        </value>
                </property>
        </bean>

        <!--LifecycleBeanPostProcessor -->
        <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"></bean>

        <!-- MD5配置 -->
        <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <property name="hashAlgorithmName" value="md5"></property>
                <property name="hashIterations" value="5"></property>
        </bean>

</beans>