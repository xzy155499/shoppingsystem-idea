<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guigu.dao.GoodsDao">

    <resultMap id="goodsMap" type="goods">
        <id column="g_id" property="gId"></id>
        <result column="g_name" property="gName"></result>
        <result column="g_img" property="gImg"></result>
        <result column="g_price_into" property="gPriceInto"></result>
        <result column="g_price_out" property="gPriceOut"></result>
        <result column="g_describe" property="gDescribe"></result>
        <result column="g_time" property="gTime"></result>
        <result column="g_parent" property="gParent"></result>

        <result column="g_child" property="gChild"></result>
        <result column="g_num" property="gNum"></result>
        <result column="g_final_sales" property="gFinalSales"></result>
        <result column="g_final_purchase" property="gFinalPurchase"></result>

        <collection property="goodsChildType" javaType="com.guigu.vo.GoodsChildType"
                    column="g_child" select="com.guigu.dao.GoodsChildDao.queryGoodsChildTypeById" fetchType="lazy">
        </collection>
        <collection property="goodsParentType" javaType="com.guigu.vo.GoodsParentType"
                    column="g_parent" select="com.guigu.dao.GoodsParentDao.queryGoodsParentTypeById" fetchType="lazy">
        </collection>
<!--        <collection property="warehouseNum" javaType="int"-->
<!--                    column="g_id" select="com.guigu.dao.WarehouseGoodsDao.queWarehouseNumByGid" fetchType="lazy">-->
<!--        </collection>-->

    </resultMap>



    <select id="queryGoodsById" resultMap="goodsMap">
		SELECT * FROM goods where g_id =#{id}
	</select>
    <select id="queryAllGoods" resultMap="goodsMap" parameterType="goods">
		SELECT * FROM goods
		 <where>
             <if test="gName!=null"> and g_name like concat('%',#{gName},'%')</if>
             <if test="1==1">and isdisplay=0</if>
         </where>


	</select>

    <select id="queryAllGoodsCond" resultType="int">
		SELECT count(*) FROM goods
        <where>
            <if test="gName!=null"> and g_name like concat('%',#{gName},'%')</if>
            <if test="1==1">and isdisplay=0</if>
        </where>
	</select>

    <select id="queryAllGoods1" resultMap="goodsMap" parameterType="goods">
        SELECT * FROM goods
        <where>
            <if test="gName!=null"> and g_name like concat('%',#{gName},'%')</if>
            <if test="1==1">and isdisplay=0 </if>
            <if test="gImg!=''">and g_id not in(${gImg})</if>

        </where>
    </select>
    <select id="queryAllGoodsCond1" resultType="int">
        SELECT count(*) FROM goods
        <where>
            <if test="gName!=null"> and g_name like concat('%',#{gName},'%')</if>
            <if test="1==1">and isdisplay=0 </if>
            <if test="gImg!=''">and g_id not in(${gImg})</if>
        </where>
    </select>

    <select id="queryAllGoods2" resultMap="goodsMap" parameterType="goods">
        SELECT * FROM goods
        <where>
            <if test="gName!=null"> and g_name like concat('%',#{gName},'%')</if>
            <if test="1==1">and isdisplay=0 </if>
            <if test="gImg!=''">and g_id in(${gImg})</if>

        </where>
    </select>


    <insert id="addGoods" parameterType="goods">
        INSERT INTO `shoppingdb`.`goods` (
  `g_name`,
  `g_img`,
  `g_price_into`,
  `g_price_out`,
  `g_describe`,
  `g_time`,
  `g_parent`,
  `g_child`,
  `g_num`
)
VALUES
  (
    #{gName},
    #{gImg},
    #{gPriceInto},
    #{gPriceOut},
    #{gDescribe},
    now(),
    #{gParent},
    #{gChild},
    0
  ) ;
    </insert>
    <update id="updGoodsImg" parameterType="goods">
UPDATE
  `shoppingdb`.`goods`
SET
  `g_img` = #{gImg}
WHERE `g_id` = #{gId} ;
    </update>
    <update id="delGoods" parameterType="int">
UPDATE goods SET isdisplay=1 where g_id=#{gId}
    </update>

    <update id="updGoods" parameterType="goods">
UPDATE
  `shoppingdb`.`goods`
SET
  `g_name` = #{gName},
  `g_price_into` = #{gPriceInto},
  `g_price_out` = #{gPriceOut},
  `g_describe` = #{gDescribe},
  `g_parent` = #{gParent},
  `g_child` = #{gChild}
WHERE `g_id` = #{gId} ;
    </update>
    <update id="updFinalSales" parameterType="int">
UPDATE
  `shoppingdb`.`goods`
SET
`g_final_sales`=now(),
`g_num`=`g_num`+ #{num}
WHERE `g_id` = #{id} ;
    </update>

    <update id="updFinalPurchase" parameterType="int">
UPDATE
  `shoppingdb`.`goods`
SET
`g_final_purchase`=now()
WHERE `g_id` = #{id} ;
    </update>


</mapper>