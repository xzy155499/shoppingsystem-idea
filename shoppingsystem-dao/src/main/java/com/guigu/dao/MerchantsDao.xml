<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guigu.dao.MerchantsDao">

    <resultMap id="MerchantsMap" type="Merchants">

        <id column="m_id" property="mId"></id>
        <result column="m_name" property="mName"></result>
        <result column="m_username" property="mUsername"></result>
        <result column="m_img" property="mImg"></result>
        <result column="m_sex" property="mSex"></result>
        <result column="m_coordinates" property="mCoordinates"></result>
        <result column="m_note" property="mNote"></result>
        <result column="m_province" property="mProvince"></result>
        <result column="m_city" property="mCity"></result>
        <result column="m_county" property="mCounty"></result>
        <result column="m_state" property="mState"></result>
        <result column="m_stores_name" property="mStoresName"></result>
        <result column="m_detailed_address" property="mDetailedAddress"></result>
        <result column="m_time" property="mTime"></result>
        <result column="m_pwd" property="mPwd"></result>
        <result column="m_phone" property="mPhone"></result>
    </resultMap>
    <resultMap id="OrderInfoMap" type="OrderInfo">
        <id column="order_id" property="orderId"></id>
        <result column="user_id" property="userId" ></result>
        <result column="merchant_id" property="merchantId" ></result>
        <result column="emp_id" property="empId" ></result>
        <result column="order_time" property="orderTime" ></result>
        <result column="delivery_time" property="deliveryTime" ></result>
        <result column="receipt_time" property="receiptTime" ></result>
        <result column="pick_time" property="pickTime" ></result>
        <result column="order_state" property="orderState" ></result>
        <collection property="empInfo" javaType="com.guigu.vo.EmpInfo"
                    column="emp_id" select="com.guigu.dao.EmpDao.queEmpByIdId" fetchType="lazy">
        </collection>
        <collection property="userInfo" javaType="com.guigu.vo.UserInfo"
                    column="user_id" select="com.guigu.dao.UserDao.queryByIdUser" fetchType="lazy">
        </collection>
        <collection property="merchants" javaType="com.guigu.vo.Merchants"
                    column="merchant_id" select="com.guigu.dao.MerchantsDao.queryMerchantsById" fetchType="lazy">
        </collection>
        <collection property="list" javaType="list"
                    column="order_id" select="com.guigu.dao.OrderGoodsDao.queOrderGoodsByOid" fetchType="lazy">
        </collection>
    </resultMap>



    <select id="queryMerchantsById" resultMap="MerchantsMap" parameterType="int">
        select * from merchants where m_id = #{id}
	</select>
    <select id="queryAllMerchants" resultMap="MerchantsMap" parameterType="Merchants">
        select * from merchants
        <where>
            <if test="mName!=null">and m_name like concat('%',#{mName},'%')</if>
        </where>
	</select>

    <select id="queryMerchantsCount" resultType="int"  parameterType="Merchants">
        select count(*) from merchants
        <where>
            <if test="mName!=null">and m_name like concat('%',#{mName},'%')</if>
        </where>
	</select>
    <select id="loginMerchants" resultMap="MerchantsMap"  parameterType="merchants">
        select * from merchants where m_username=#{mUsername} AND m_pwd =#{mPwd}
    </select>

    <select id="queMerchantsStatistical"
            resultMap="MerchantsMap">
    SELECT COUNT(*) m_id,m_province FROM merchants GROUP BY m_province ORDER BY m_id DESC
	</select>



    <select id="queMerchantsOrder" resultMap="OrderInfoMap" parameterType="OrderInfo">
        SELECT o.* FROM order_info  o
        INNER JOIN merchants m ON o.`merchant_id`=m.m_id
        INNER JOIN emp_info e ON e.`emp_id`=o.`emp_id`
        INNER JOIN user_info u ON u. user_id=o.`user_id`
        where o.merchant_id =#{merchantId} and o.order_state=#{orderState}
        and m.`m_stores_name` like concat('%',#{merchants.mStoresName},'%')
        and u.`user_name` like concat('%',#{userInfo.user_name},'%')
    </select>
    <select id="queMerchantsOrderCount" resultType="int" parameterType="OrderInfo">
        SELECT count(*) FROM order_info  o
        INNER JOIN merchants m ON o.`merchant_id`=m.m_id
        INNER JOIN emp_info e ON e.`emp_id`=o.`emp_id`
        INNER JOIN user_info u ON u. user_id=o.`user_id`
        where o.merchant_id =#{merchantId} and o.order_state=#{orderState}
        and m.`m_stores_name` like concat('%',#{merchants.mStoresName},'%')
        and u.`user_name` like concat('%',#{userInfo.user_name},'%')
    </select>
    <select id="queMerchantsMonthByMid" resultType="int">
        SELECT SUM(SUM) mId FROM order_info WHERE order_time &gt; DATE_SUB(DATE_ADD(DATE_ADD(CURDATE(),INTERVAL -DAY(CURDATE())+1 DAY), INTERVAL ${month}-1 MONTH), INTERVAL 1 WEEK)
        AND order_time &lt;= DATE_SUB(DATE_ADD(DATE_ADD(CURDATE(),INTERVAL -DAY(CURDATE())+1 DAY), INTERVAL #{month} MONTH), INTERVAL 1 WEEK) and merchant_id =#{mid}
    </select>
   <select id="queMerchantsYearByMid" resultType="int">
       SELECT SUM(SUM) FROM order_info WHERE order_time&lt;=DATE_ADD(DATE_SUB( CURDATE( ), INTERVAL DAYOFYEAR( NOW( ) ) - 1 DAY ),INTERVAL ${year} YEAR)
       AND order_time&gt;DATE_ADD(DATE_SUB( CURDATE( ), INTERVAL DAYOFYEAR( NOW( ) ) - 1 DAY ),INTERVAL ${year}-1 YEAR) and merchant_id =#{mid}
   </select>

<!--    <select id="queMerchantsDelivery" resultMap="OrderInfoMap" parameterType="int">-->
<!--        SELECT * FROM order_info where merchant_id =#{id};-->
<!--    </select>-->
<!--    <select id="queMerchantsDeliveryCount" resultType="int">-->
<!--        SELECT count(*) FROM order_info where merchant_id =#{id};-->
<!--    </select>-->

<!--    <select id="queMerchantsReceipt" resultMap="OrderInfoMap" parameterType="int">-->
<!--        SELECT * FROM order_info where merchant_id =#{id};-->
<!--    </select>-->
<!--    <select id="queMerchantsReceiptCount" resultType="int">-->
<!--        SELECT count(*) FROM order_info where merchant_id =#{id};-->
<!--    </select>-->

<!--    <select id="queMerchantsPick" resultMap="OrderInfoMap" parameterType="int">-->
<!--        SELECT * FROM order_info where merchant_id =#{id};-->
<!--    </select>-->
<!--    <select id="queMerchantsPickCount" resultType="int">-->
<!--        SELECT count(*) FROM order_info where merchant_id =#{id};-->
<!--    </select>-->




    <insert id="addMerchants">
INSERT INTO `shoppingdb`.`merchants` (
  `w_name`,
  `w_coordinates`,
  `w_note`,
  `w_province`,
  `w_city`,
  `w_county`,
  `w_detailed`
)
VALUES
  (
    #{wName},
    #{wCoordinates},
    #{wNote},
    #{wProvince},
    #{wCity},
    #{wCounty},
    #{wDetailed}
  ) ;
    </insert>
    <delete id="delMerchants">
        UPDATE
  `shoppingdb`.`merchants`
SET
  `m_state` = '禁用' where `m_id`=#{id};
    </delete>

<update id="updMerchants">
UPDATE
  `shoppingdb`.`merchants`
SET
  `m_stores_name` = #{mStoresName},
  `m_name` = #{mName},
  `m_username` = #{mUsername},
  `m_pwd` = #{mPwd},
  `m_sex` = #{mSex},
  `m_coordinates` = #{mCoordinates},
  `m_note` = #{mNote},
  `m_province` = #{mProvince},
  `m_city` = #{mCity},
  `m_county` = #{mCounty},
  `m_detailed_address` = #{mDetailedAddress},
  `m_phone` = #{mPhone}
WHERE `m_id` = #{mId} ;
</update>
    <update id="updMarehouseImg">
        UPDATE
  `shoppingdb`.`merchants`
SET
  `m_img` = #{mImg}
WHERE `m_id` = #{mId} ;
    </update>
    <update id="updDeliveryByOid" parameterType="OrderInfo">
        UPDATE
  `shoppingdb`.`order_info`
SET
  `receipt_time` = now(),
  order_state ='待提货'
WHERE `order_id` = #{orderId} ;
    </update>



</mapper>
